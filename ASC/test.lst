     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                  ;Se da un sir de cuvinte. Sa se obtina din acesta un sir de dublucuvinte, in care fiecare dublucuvant va contine nibble-urile despachetate pe octet (fiecare cifra hexa va fi precedata de un 0), aranjate crescator in
    14                                  ;pentru sirul initial:
    15                                  ;01732h, 8475h, 0ADBCh, ...
    16                                  ;Se va obtine:
    17                                  ;01020307h,  04060708h, 0A0D0B0Ch, ... 
    18                                  
    19                                  
    20                                  segment code use32 class=code
    21                                  start:
    22 00000000 55                          push ebp
    23 00000001 89E5                        mov ebp, esp
    24 00000003 8B6D00                      mov ebp, [ebp]
    25 00000006 8B5D00                      mov ebx, [ebp]
    26 00000009 891C24                      mov [esp], ebx
    27                                  
    28 0000000C 6A00                    	push dword 0 ; push the parameter for exit onto the stack
    29 0000000E FF15[00000000]          	call [exit] ; call exit to terminate the program
