     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fprintf, fopen, printf, scanf, fscanf      ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fprintf msvcrt.dll     
    11                                  import printf msvcrt.dll
    12                                  import scanf msvcrt.dll
    13                                  import fscanf msvcrt.dll                    ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 00000000                n dd 0
    18 00000004 00000000<rept>          cuvinte times 100 dd 0
    19 00000194 257300                  format db "%s", 0
    20 00000197 256400                  format_numar db "%d", 0
    21 0000019A 666973696572756C20-     mesaj_error db "fisierul nu poate fi accesat", 0
    21 000001A3 6E7520706F61746520-
    21 000001AC 666920616363657361-
    21 000001B5 7400               
    22                                  
    23 000001B7 00<rept>                sir times 100 db 0
    24 0000021B 00<rept>                len_sir times 100 db 0 
    25                                  
    26 0000027F 7700                    mod_acces db "w", 0
    27 00000281 666973696572747874-     nume_fisier db "fisiertxtasm.txt.txt", 0
    27 0000028A 61736D2E7478742E74-
    27 00000293 787400             
    28 00000296 00                      descriptor_fisier db 0
    29                                  ;sa se citeasca de la tastatura numarul n, apoi mai multe cuvinte pana cand se citeste cuvantul/caracterul "#". Sa se scrie intr-un fisier txt toate cuvintele citite care au cel putin n vocale
    30                                  segment code use32 class=code
    31                                  
    32                                      start:
    33 00000000 68[7F020000]                push dword mod_acces
    34 00000005 68[81020000]                push dword nume_fisier
    35 0000000A FF15[00000000]              call [fopen]
    36 00000010 83C408                      add esp, 4*2
    37                                      
    38 00000013 A3[96020000]                mov [descriptor_fisier], eax
    39 00000018 83F800                      cmp eax, 0
    40 0000001B 7456                        je mesaj_eroare
    41                                      
    42 0000001D 68[00000000]                push dword n
    43 00000022 68[97010000]                push dword format_numar
    44 00000027 FF15[00000000]              call [scanf]
    45 0000002D 83C408                      add esp, 4*2     ;se citeste de la tastatura numarul n
    46                                      
    47 00000030 BE00000000                  mov esi, 0
    48                                      
    49 00000035 BB00000000                  mov ebx, 0
    50                                      repeta:
    51 0000003A 68[04000000]                    push dword cuvinte
    52 0000003F 68[94010000]                    push dword format
    53 00000044 FF15[00000000]                  call [scanf]
    54 0000004A 83C408                          add esp, 4*2   ;se citesc de la tastatura cuvinte
    55                                          
    56                                          
    57                                          
    58 0000004D BE[04000000]                    mov esi, cuvinte
    59                                          
    60                                          
    61                                          
    62                                          vocala:
    63 00000052 43                              inc ebx
    64 00000053 3B1D[00000000]                  cmp ebx, [n]
    65 00000059 75DF                            jne repeta
    66                                          
    67                                          
    68                                          scrie_in_fisier:
    69 0000005B 68[04000000]                    push dword cuvinte
    70 00000060 68[94010000]                    push dword format
    71 00000065 FF35[96020000]                  push dword [descriptor_fisier]
    72 0000006B FF15[00000000]                  call [fscanf]
    73 00000071 EBC7                        jmp repeta
    74                                      
    75                                      
    76                                      
    77                                      
    78                                      mesaj_eroare:
    79 00000073 68[9A010000]                push dword mesaj_error
    80 00000078 FF15[00000000]              call [scanf]
    81 0000007E 83C604                      add esi, 4
    82                                      
    83                                      final:
    84                                          ; exit(0)
    85 00000081 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    86 00000083 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
