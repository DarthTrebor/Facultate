     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; Se da un sir de bytes. Sa se salveze intr -un alt sir bytes, bytes care au valorea impara
    14                                      
    15 00000000 110C0D0607                  s db 17, 12, 13, 6, 7
    16                                      ls equ $ - s
    17 00000005 <res 00000005>              d resb ls
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22 00000000 B905000000                      mov ecx, ls
    23 00000005 BE00000000                      mov esi, 0
    24 0000000A BF00000000                      mov edi, 0
    25                                          repeta:
    26 0000000F 8A86[00000000]                      mov al, [s + esi]
    27 00000015 88C4                                mov ah, al
    28 00000017 2401                                and al, 00000001
    29 00000019 3C01                                cmp al, 00000001
    30 0000001B 7402                                je salveaza
    31 0000001D 750A                                jne next
    32                                              salveaza:
    33 0000001F 88A7[05000000]                          mov [d + edi], ah
    34 00000025 46                                      inc esi
    35 00000026 47                                      inc edi
    36 00000027 EB01                                    jmp myendif
    37                                              next:
    38 00000029 46                                      inc esi
    39                                                  myendif:
    40 0000002A E2E3                            loop repeta
    41                                          
    42                                          
    43 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
